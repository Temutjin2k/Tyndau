version: '3.8'

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    env_file:
      - ./api-gateway/.env
    ports:
      - "8080:8080" 
    depends_on:
      - auth_service
      - user_service
      - notification-service
    networks:
      - app-network

  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    env_file:
      - ./auth_service/.env
    networks:
      - app-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    env_file:
      - ./notification-service/.env
    networks:
      - app-network

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    env_file:
      - ./user_service/.env
    networks:
      - app-network
      
  # Nats    
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "--jetstream --http_port 8222"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000
      POSTGRES_DB: music_service
    ports: [ "5433:5432" ]

  redis:
    image: redis:7-alpine
    ports: [ "6379:6379" ]
    restart: unless-stopped

  music-service:
    build:
      context: ./music-service
      dockerfile: Dockerfile
    depends_on: [ postgres, redis ]
    environment:
      POSTGRES_DSN: "postgres://postgres:0000@postgres:5433/music_service?sslmode=disable"
      REDIS_ADDR: "redis:6379"
      CACHE_TTL_SECONDS: "300"
    ports: [ "50051:50051" ]


networks:
  app-network:
    driver: bridge
